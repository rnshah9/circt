// NOTE: Assertions have been autogenerated by utils/generate-test-checks.py
// RUN: circt-opt -lower-std-to-handshake %s | FileCheck %s

// CHECK-LABEL:   handshake.func @if_for(
// CHECK-SAME:                           %[[VAL_0:.*]]: none, ...) -> none attributes {argNames = ["inCtrl"], resNames = ["outCtrl"]} {
// CHECK:           %[[VAL_1:.*]]:4 = fork [4] %[[VAL_0]] : none
// CHECK:           %[[VAL_2:.*]] = constant %[[VAL_1]]#2 {value = 0 : index} : index
// CHECK:           %[[VAL_3:.*]] = constant %[[VAL_1]]#1 {value = -1 : index} : index
// CHECK:           %[[VAL_4:.*]]:2 = fork [2] %[[VAL_3]] : index
// CHECK:           %[[VAL_5:.*]] = arith.muli %[[VAL_4]]#0, %[[VAL_4]]#1 : index
// CHECK:           %[[VAL_6:.*]] = constant %[[VAL_1]]#0 {value = 20 : index} : index
// CHECK:           %[[VAL_7:.*]] = arith.addi %[[VAL_5]], %[[VAL_6]] : index
// CHECK:           %[[VAL_8:.*]] = arith.cmpi sge, %[[VAL_7]], %[[VAL_2]] : index
// CHECK:           %[[VAL_9:.*]], %[[VAL_10:.*]] = cond_br %[[VAL_8]], %[[VAL_1]]#3 : none
// CHECK:           %[[VAL_11:.*]], %[[VAL_12:.*]] = control_merge %[[VAL_9]] : none
// CHECK:           %[[VAL_13:.*]]:4 = fork [4] %[[VAL_11]] : none
// CHECK:           sink %[[VAL_12]] : index
// CHECK:           %[[VAL_14:.*]] = constant %[[VAL_13]]#2 {value = 0 : index} : index
// CHECK:           %[[VAL_15:.*]] = constant %[[VAL_13]]#1 {value = 42 : index} : index
// CHECK:           %[[VAL_16:.*]] = constant %[[VAL_13]]#0 {value = 1 : index} : index
// CHECK:           %[[VAL_17:.*]] = br %[[VAL_13]]#3 : none
// CHECK:           %[[VAL_18:.*]] = br %[[VAL_14]] : index
// CHECK:           %[[VAL_19:.*]] = br %[[VAL_15]] : index
// CHECK:           %[[VAL_20:.*]] = br %[[VAL_16]] : index
// CHECK:           %[[VAL_21:.*]], %[[VAL_22:.*]] = control_merge %[[VAL_17]] : none
// CHECK:           %[[VAL_23:.*]]:3 = fork [3] %[[VAL_22]] : index
// CHECK:           %[[VAL_24:.*]] = buffer [1] seq %[[VAL_25:.*]] {initValues = [0]} : i1
// CHECK:           %[[VAL_26:.*]]:4 = fork [4] %[[VAL_24]] : i1
// CHECK:           %[[VAL_27:.*]] = mux %[[VAL_26]]#3 {{\[}}%[[VAL_21]], %[[VAL_28:.*]]] : i1, none
// CHECK:           %[[VAL_29:.*]] = mux %[[VAL_23]]#2 {{\[}}%[[VAL_19]]] : index, index
// CHECK:           %[[VAL_30:.*]] = mux %[[VAL_26]]#2 {{\[}}%[[VAL_29]], %[[VAL_31:.*]]] : i1, index
// CHECK:           %[[VAL_32:.*]]:2 = fork [2] %[[VAL_30]] : index
// CHECK:           %[[VAL_33:.*]] = mux %[[VAL_23]]#1 {{\[}}%[[VAL_20]]] : index, index
// CHECK:           %[[VAL_34:.*]] = mux %[[VAL_26]]#1 {{\[}}%[[VAL_33]], %[[VAL_35:.*]]] : i1, index
// CHECK:           %[[VAL_36:.*]] = mux %[[VAL_23]]#0 {{\[}}%[[VAL_18]]] : index, index
// CHECK:           %[[VAL_37:.*]] = mux %[[VAL_26]]#0 {{\[}}%[[VAL_36]], %[[VAL_38:.*]]] : i1, index
// CHECK:           %[[VAL_39:.*]]:2 = fork [2] %[[VAL_37]] : index
// CHECK:           %[[VAL_25]] = merge %[[VAL_40:.*]]#0 : i1
// CHECK:           %[[VAL_41:.*]] = arith.cmpi slt, %[[VAL_39]]#0, %[[VAL_32]]#0 : index
// CHECK:           %[[VAL_40]]:5 = fork [5] %[[VAL_41]] : i1
// CHECK:           %[[VAL_42:.*]], %[[VAL_43:.*]] = cond_br %[[VAL_40]]#4, %[[VAL_32]]#1 : index
// CHECK:           sink %[[VAL_43]] : index
// CHECK:           %[[VAL_44:.*]], %[[VAL_45:.*]] = cond_br %[[VAL_40]]#3, %[[VAL_34]] : index
// CHECK:           sink %[[VAL_45]] : index
// CHECK:           %[[VAL_46:.*]], %[[VAL_47:.*]] = cond_br %[[VAL_40]]#2, %[[VAL_27]] : none
// CHECK:           %[[VAL_48:.*]], %[[VAL_49:.*]] = cond_br %[[VAL_40]]#1, %[[VAL_39]]#1 : index
// CHECK:           sink %[[VAL_49]] : index
// CHECK:           %[[VAL_50:.*]] = merge %[[VAL_48]] : index
// CHECK:           %[[VAL_51:.*]]:2 = fork [2] %[[VAL_50]] : index
// CHECK:           %[[VAL_52:.*]] = merge %[[VAL_44]] : index
// CHECK:           %[[VAL_53:.*]] = merge %[[VAL_42]] : index
// CHECK:           %[[VAL_54:.*]], %[[VAL_55:.*]] = control_merge %[[VAL_46]] : none
// CHECK:           %[[VAL_56:.*]]:3 = fork [3] %[[VAL_54]] : none
// CHECK:           sink %[[VAL_55]] : index
// CHECK:           %[[VAL_57:.*]] = constant %[[VAL_56]]#1 {value = 0 : index} : index
// CHECK:           %[[VAL_58:.*]] = constant %[[VAL_56]]#0 {value = -10 : index} : index
// CHECK:           %[[VAL_59:.*]] = arith.addi %[[VAL_51]]#1, %[[VAL_58]] : index
// CHECK:           %[[VAL_60:.*]] = arith.cmpi sge, %[[VAL_59]], %[[VAL_57]] : index
// CHECK:           %[[VAL_61:.*]]:4 = fork [4] %[[VAL_60]] : i1
// CHECK:           %[[VAL_62:.*]], %[[VAL_63:.*]] = cond_br %[[VAL_61]]#3, %[[VAL_51]]#0 : index
// CHECK:           %[[VAL_64:.*]], %[[VAL_65:.*]] = cond_br %[[VAL_61]]#2, %[[VAL_52]] : index
// CHECK:           %[[VAL_66:.*]], %[[VAL_67:.*]] = cond_br %[[VAL_61]]#1, %[[VAL_53]] : index
// CHECK:           %[[VAL_68:.*]], %[[VAL_69:.*]] = cond_br %[[VAL_61]]#0, %[[VAL_56]]#2 : none
// CHECK:           %[[VAL_70:.*]] = merge %[[VAL_62]] : index
// CHECK:           %[[VAL_71:.*]] = merge %[[VAL_64]] : index
// CHECK:           %[[VAL_72:.*]] = merge %[[VAL_66]] : index
// CHECK:           %[[VAL_73:.*]], %[[VAL_74:.*]] = control_merge %[[VAL_68]] : none
// CHECK:           sink %[[VAL_74]] : index
// CHECK:           %[[VAL_75:.*]] = br %[[VAL_70]] : index
// CHECK:           %[[VAL_76:.*]] = br %[[VAL_71]] : index
// CHECK:           %[[VAL_77:.*]] = br %[[VAL_72]] : index
// CHECK:           %[[VAL_78:.*]] = br %[[VAL_73]] : none
// CHECK:           %[[VAL_79:.*]] = mux %[[VAL_80:.*]]#2 {{\[}}%[[VAL_75]], %[[VAL_63]]] : index, index
// CHECK:           %[[VAL_81:.*]] = mux %[[VAL_80]]#1 {{\[}}%[[VAL_76]], %[[VAL_65]]] : index, index
// CHECK:           %[[VAL_82:.*]]:2 = fork [2] %[[VAL_81]] : index
// CHECK:           %[[VAL_83:.*]] = mux %[[VAL_80]]#0 {{\[}}%[[VAL_77]], %[[VAL_67]]] : index, index
// CHECK:           %[[VAL_84:.*]], %[[VAL_85:.*]] = control_merge %[[VAL_78]], %[[VAL_69]] : none
// CHECK:           %[[VAL_80]]:3 = fork [3] %[[VAL_85]] : index
// CHECK:           %[[VAL_86:.*]] = arith.addi %[[VAL_79]], %[[VAL_82]]#1 : index
// CHECK:           %[[VAL_35]] = br %[[VAL_82]]#0 : index
// CHECK:           %[[VAL_31]] = br %[[VAL_83]] : index
// CHECK:           %[[VAL_28]] = br %[[VAL_84]] : none
// CHECK:           %[[VAL_38]] = br %[[VAL_86]] : index
// CHECK:           %[[VAL_87:.*]], %[[VAL_88:.*]] = control_merge %[[VAL_47]] : none
// CHECK:           sink %[[VAL_88]] : index
// CHECK:           %[[VAL_89:.*]] = br %[[VAL_87]] : none
// CHECK:           %[[VAL_90:.*]], %[[VAL_91:.*]] = control_merge %[[VAL_89]], %[[VAL_10]] : none
// CHECK:           %[[VAL_92:.*]]:4 = fork [4] %[[VAL_90]] : none
// CHECK:           sink %[[VAL_91]] : index
// CHECK:           %[[VAL_93:.*]] = constant %[[VAL_92]]#2 {value = 0 : index} : index
// CHECK:           %[[VAL_94:.*]] = constant %[[VAL_92]]#1 {value = 42 : index} : index
// CHECK:           %[[VAL_95:.*]] = constant %[[VAL_92]]#0 {value = 1 : index} : index
// CHECK:           %[[VAL_96:.*]] = br %[[VAL_92]]#3 : none
// CHECK:           %[[VAL_97:.*]] = br %[[VAL_93]] : index
// CHECK:           %[[VAL_98:.*]] = br %[[VAL_94]] : index
// CHECK:           %[[VAL_99:.*]] = br %[[VAL_95]] : index
// CHECK:           %[[VAL_100:.*]], %[[VAL_101:.*]] = control_merge %[[VAL_96]] : none
// CHECK:           %[[VAL_102:.*]]:3 = fork [3] %[[VAL_101]] : index
// CHECK:           %[[VAL_103:.*]] = buffer [1] seq %[[VAL_104:.*]] {initValues = [0]} : i1
// CHECK:           %[[VAL_105:.*]]:4 = fork [4] %[[VAL_103]] : i1
// CHECK:           %[[VAL_106:.*]] = mux %[[VAL_105]]#3 {{\[}}%[[VAL_100]], %[[VAL_107:.*]]] : i1, none
// CHECK:           %[[VAL_108:.*]] = mux %[[VAL_102]]#2 {{\[}}%[[VAL_98]]] : index, index
// CHECK:           %[[VAL_109:.*]] = mux %[[VAL_105]]#2 {{\[}}%[[VAL_108]], %[[VAL_110:.*]]] : i1, index
// CHECK:           %[[VAL_111:.*]]:2 = fork [2] %[[VAL_109]] : index
// CHECK:           %[[VAL_112:.*]] = mux %[[VAL_102]]#1 {{\[}}%[[VAL_99]]] : index, index
// CHECK:           %[[VAL_113:.*]] = mux %[[VAL_105]]#1 {{\[}}%[[VAL_112]], %[[VAL_114:.*]]] : i1, index
// CHECK:           %[[VAL_115:.*]] = mux %[[VAL_102]]#0 {{\[}}%[[VAL_97]]] : index, index
// CHECK:           %[[VAL_116:.*]] = mux %[[VAL_105]]#0 {{\[}}%[[VAL_115]], %[[VAL_117:.*]]] : i1, index
// CHECK:           %[[VAL_118:.*]]:2 = fork [2] %[[VAL_116]] : index
// CHECK:           %[[VAL_104]] = merge %[[VAL_119:.*]]#0 : i1
// CHECK:           %[[VAL_120:.*]] = arith.cmpi slt, %[[VAL_118]]#0, %[[VAL_111]]#0 : index
// CHECK:           %[[VAL_119]]:5 = fork [5] %[[VAL_120]] : i1
// CHECK:           %[[VAL_121:.*]], %[[VAL_122:.*]] = cond_br %[[VAL_119]]#4, %[[VAL_111]]#1 : index
// CHECK:           sink %[[VAL_122]] : index
// CHECK:           %[[VAL_123:.*]], %[[VAL_124:.*]] = cond_br %[[VAL_119]]#3, %[[VAL_113]] : index
// CHECK:           sink %[[VAL_124]] : index
// CHECK:           %[[VAL_125:.*]], %[[VAL_126:.*]] = cond_br %[[VAL_119]]#2, %[[VAL_106]] : none
// CHECK:           %[[VAL_127:.*]], %[[VAL_128:.*]] = cond_br %[[VAL_119]]#1, %[[VAL_118]]#1 : index
// CHECK:           sink %[[VAL_128]] : index
// CHECK:           %[[VAL_129:.*]] = merge %[[VAL_127]] : index
// CHECK:           %[[VAL_130:.*]]:2 = fork [2] %[[VAL_129]] : index
// CHECK:           %[[VAL_131:.*]] = merge %[[VAL_123]] : index
// CHECK:           %[[VAL_132:.*]] = merge %[[VAL_121]] : index
// CHECK:           %[[VAL_133:.*]], %[[VAL_134:.*]] = control_merge %[[VAL_125]] : none
// CHECK:           %[[VAL_135:.*]]:3 = fork [3] %[[VAL_133]] : none
// CHECK:           sink %[[VAL_134]] : index
// CHECK:           %[[VAL_136:.*]] = constant %[[VAL_135]]#1 {value = 0 : index} : index
// CHECK:           %[[VAL_137:.*]] = constant %[[VAL_135]]#0 {value = -10 : index} : index
// CHECK:           %[[VAL_138:.*]] = arith.addi %[[VAL_130]]#1, %[[VAL_137]] : index
// CHECK:           %[[VAL_139:.*]] = arith.cmpi sge, %[[VAL_138]], %[[VAL_136]] : index
// CHECK:           %[[VAL_140:.*]]:4 = fork [4] %[[VAL_139]] : i1
// CHECK:           %[[VAL_141:.*]], %[[VAL_142:.*]] = cond_br %[[VAL_140]]#3, %[[VAL_130]]#0 : index
// CHECK:           %[[VAL_143:.*]], %[[VAL_144:.*]] = cond_br %[[VAL_140]]#2, %[[VAL_131]] : index
// CHECK:           %[[VAL_145:.*]], %[[VAL_146:.*]] = cond_br %[[VAL_140]]#1, %[[VAL_132]] : index
// CHECK:           %[[VAL_147:.*]], %[[VAL_148:.*]] = cond_br %[[VAL_140]]#0, %[[VAL_135]]#2 : none
// CHECK:           %[[VAL_149:.*]] = merge %[[VAL_141]] : index
// CHECK:           %[[VAL_150:.*]] = merge %[[VAL_143]] : index
// CHECK:           %[[VAL_151:.*]] = merge %[[VAL_145]] : index
// CHECK:           %[[VAL_152:.*]], %[[VAL_153:.*]] = control_merge %[[VAL_147]] : none
// CHECK:           %[[VAL_154:.*]]:4 = fork [4] %[[VAL_152]] : none
// CHECK:           sink %[[VAL_153]] : index
// CHECK:           %[[VAL_155:.*]] = constant %[[VAL_154]]#2 {value = 0 : index} : index
// CHECK:           %[[VAL_156:.*]] = constant %[[VAL_154]]#1 {value = 42 : index} : index
// CHECK:           %[[VAL_157:.*]] = constant %[[VAL_154]]#0 {value = 1 : index} : index
// CHECK:           %[[VAL_158:.*]] = br %[[VAL_149]] : index
// CHECK:           %[[VAL_159:.*]] = br %[[VAL_150]] : index
// CHECK:           %[[VAL_160:.*]] = br %[[VAL_151]] : index
// CHECK:           %[[VAL_161:.*]] = br %[[VAL_154]]#3 : none
// CHECK:           %[[VAL_162:.*]] = br %[[VAL_155]] : index
// CHECK:           %[[VAL_163:.*]] = br %[[VAL_156]] : index
// CHECK:           %[[VAL_164:.*]] = br %[[VAL_157]] : index
// CHECK:           %[[VAL_165:.*]] = mux %[[VAL_166:.*]]#5 {{\[}}%[[VAL_167:.*]], %[[VAL_163]]] : index, index
// CHECK:           %[[VAL_168:.*]]:2 = fork [2] %[[VAL_165]] : index
// CHECK:           %[[VAL_169:.*]] = mux %[[VAL_166]]#4 {{\[}}%[[VAL_170:.*]], %[[VAL_164]]] : index, index
// CHECK:           %[[VAL_171:.*]] = mux %[[VAL_166]]#3 {{\[}}%[[VAL_172:.*]], %[[VAL_158]]] : index, index
// CHECK:           %[[VAL_173:.*]] = mux %[[VAL_166]]#2 {{\[}}%[[VAL_174:.*]], %[[VAL_159]]] : index, index
// CHECK:           %[[VAL_175:.*]] = mux %[[VAL_166]]#1 {{\[}}%[[VAL_176:.*]], %[[VAL_160]]] : index, index
// CHECK:           %[[VAL_177:.*]], %[[VAL_178:.*]] = control_merge %[[VAL_179:.*]], %[[VAL_161]] : none
// CHECK:           %[[VAL_166]]:6 = fork [6] %[[VAL_178]] : index
// CHECK:           %[[VAL_180:.*]] = mux %[[VAL_166]]#0 {{\[}}%[[VAL_181:.*]], %[[VAL_162]]] : index, index
// CHECK:           %[[VAL_182:.*]]:2 = fork [2] %[[VAL_180]] : index
// CHECK:           %[[VAL_183:.*]] = arith.cmpi slt, %[[VAL_182]]#1, %[[VAL_168]]#1 : index
// CHECK:           %[[VAL_184:.*]]:7 = fork [7] %[[VAL_183]] : i1
// CHECK:           %[[VAL_185:.*]], %[[VAL_186:.*]] = cond_br %[[VAL_184]]#6, %[[VAL_168]]#0 : index
// CHECK:           sink %[[VAL_186]] : index
// CHECK:           %[[VAL_187:.*]], %[[VAL_188:.*]] = cond_br %[[VAL_184]]#5, %[[VAL_169]] : index
// CHECK:           sink %[[VAL_188]] : index
// CHECK:           %[[VAL_189:.*]], %[[VAL_190:.*]] = cond_br %[[VAL_184]]#4, %[[VAL_171]] : index
// CHECK:           %[[VAL_191:.*]], %[[VAL_192:.*]] = cond_br %[[VAL_184]]#3, %[[VAL_173]] : index
// CHECK:           %[[VAL_193:.*]], %[[VAL_194:.*]] = cond_br %[[VAL_184]]#2, %[[VAL_175]] : index
// CHECK:           %[[VAL_195:.*]], %[[VAL_196:.*]] = cond_br %[[VAL_184]]#1, %[[VAL_177]] : none
// CHECK:           %[[VAL_197:.*]], %[[VAL_198:.*]] = cond_br %[[VAL_184]]#0, %[[VAL_182]]#0 : index
// CHECK:           sink %[[VAL_198]] : index
// CHECK:           %[[VAL_199:.*]] = merge %[[VAL_197]] : index
// CHECK:           %[[VAL_200:.*]] = merge %[[VAL_187]] : index
// CHECK:           %[[VAL_201:.*]]:2 = fork [2] %[[VAL_200]] : index
// CHECK:           %[[VAL_202:.*]] = merge %[[VAL_185]] : index
// CHECK:           %[[VAL_203:.*]] = merge %[[VAL_189]] : index
// CHECK:           %[[VAL_204:.*]] = merge %[[VAL_191]] : index
// CHECK:           %[[VAL_205:.*]] = merge %[[VAL_193]] : index
// CHECK:           %[[VAL_206:.*]], %[[VAL_207:.*]] = control_merge %[[VAL_195]] : none
// CHECK:           sink %[[VAL_207]] : index
// CHECK:           %[[VAL_208:.*]] = arith.addi %[[VAL_199]], %[[VAL_201]]#1 : index
// CHECK:           %[[VAL_170]] = br %[[VAL_201]]#0 : index
// CHECK:           %[[VAL_167]] = br %[[VAL_202]] : index
// CHECK:           %[[VAL_172]] = br %[[VAL_203]] : index
// CHECK:           %[[VAL_174]] = br %[[VAL_204]] : index
// CHECK:           %[[VAL_176]] = br %[[VAL_205]] : index
// CHECK:           %[[VAL_179]] = br %[[VAL_206]] : none
// CHECK:           %[[VAL_181]] = br %[[VAL_208]] : index
// CHECK:           %[[VAL_209:.*]] = merge %[[VAL_190]] : index
// CHECK:           %[[VAL_210:.*]] = merge %[[VAL_192]] : index
// CHECK:           %[[VAL_211:.*]] = merge %[[VAL_194]] : index
// CHECK:           %[[VAL_212:.*]], %[[VAL_213:.*]] = control_merge %[[VAL_196]] : none
// CHECK:           sink %[[VAL_213]] : index
// CHECK:           %[[VAL_214:.*]] = br %[[VAL_209]] : index
// CHECK:           %[[VAL_215:.*]] = br %[[VAL_210]] : index
// CHECK:           %[[VAL_216:.*]] = br %[[VAL_211]] : index
// CHECK:           %[[VAL_217:.*]] = br %[[VAL_212]] : none
// CHECK:           %[[VAL_218:.*]] = mux %[[VAL_219:.*]]#2 {{\[}}%[[VAL_214]], %[[VAL_142]]] : index, index
// CHECK:           %[[VAL_220:.*]] = mux %[[VAL_219]]#1 {{\[}}%[[VAL_215]], %[[VAL_144]]] : index, index
// CHECK:           %[[VAL_221:.*]]:2 = fork [2] %[[VAL_220]] : index
// CHECK:           %[[VAL_222:.*]] = mux %[[VAL_219]]#0 {{\[}}%[[VAL_216]], %[[VAL_146]]] : index, index
// CHECK:           %[[VAL_223:.*]], %[[VAL_224:.*]] = control_merge %[[VAL_217]], %[[VAL_148]] : none
// CHECK:           %[[VAL_219]]:3 = fork [3] %[[VAL_224]] : index
// CHECK:           %[[VAL_225:.*]] = arith.addi %[[VAL_218]], %[[VAL_221]]#1 : index
// CHECK:           %[[VAL_114]] = br %[[VAL_221]]#0 : index
// CHECK:           %[[VAL_110]] = br %[[VAL_222]] : index
// CHECK:           %[[VAL_107]] = br %[[VAL_223]] : none
// CHECK:           %[[VAL_117]] = br %[[VAL_225]] : index
// CHECK:           %[[VAL_226:.*]], %[[VAL_227:.*]] = control_merge %[[VAL_126]] : none
// CHECK:           sink %[[VAL_227]] : index
// CHECK:           return %[[VAL_226]] : none
// CHECK:         }
func.func @if_for() {
  %c0 = arith.constant 0 : index
  %c-1 = arith.constant -1 : index
  %1 = arith.muli %c-1, %c-1 : index
  %c20 = arith.constant 20 : index
  %2 = arith.addi %1, %c20 : index
  %3 = arith.cmpi sge, %2, %c0 : index
  cf.cond_br %3, ^bb1, ^bb7
^bb1: // pred: ^bb0
  %c0_0 = arith.constant 0 : index
  %c42 = arith.constant 42 : index
  %c1 = arith.constant 1 : index
  cf.br ^bb2(%c0_0 : index)
^bb2(%4: index):      // 2 preds: ^bb1, ^bb5
  %5 = arith.cmpi slt, %4, %c42 : index
  cf.cond_br %5, ^bb3, ^bb6
^bb3: // pred: ^bb2
  %c0_1 = arith.constant 0 : index
  %c-10 = arith.constant -10 : index
  %6 = arith.addi %4, %c-10 : index
  %7 = arith.cmpi sge, %6, %c0_1 : index
  cf.cond_br %7, ^bb4, ^bb5
^bb4: // pred: ^bb3
  cf.br ^bb5
^bb5: // 2 preds: ^bb3, ^bb4
  %8 = arith.addi %4, %c1 : index
  cf.br ^bb2(%8 : index)
^bb6: // pred: ^bb2
  cf.br ^bb7
^bb7: // 2 preds: ^bb0, ^bb6
  %c0_2 = arith.constant 0 : index
  %c42_3 = arith.constant 42 : index
  %c1_4 = arith.constant 1 : index
  cf.br ^bb8(%c0_2 : index)
^bb8(%9: index):      // 2 preds: ^bb7, ^bb14
  %10 = arith.cmpi slt, %9, %c42_3 : index
  cf.cond_br %10, ^bb9, ^bb15
^bb9: // pred: ^bb8
  %c0_5 = arith.constant 0 : index
  %c-10_6 = arith.constant -10 : index
  %11 = arith.addi %9, %c-10_6 : index
  %12 = arith.cmpi sge, %11, %c0_5 : index
  cf.cond_br %12, ^bb10, ^bb14
^bb10:        // pred: ^bb9
  %c0_7 = arith.constant 0 : index
  %c42_8 = arith.constant 42 : index
  %c1_9 = arith.constant 1 : index
  cf.br ^bb11(%c0_7 : index)
^bb11(%13: index):    // 2 preds: ^bb10, ^bb12
  %14 = arith.cmpi slt, %13, %c42_8 : index
  cf.cond_br %14, ^bb12, ^bb13
^bb12:        // pred: ^bb11
  %15 = arith.addi %13, %c1_9 : index
  cf.br ^bb11(%15 : index)
^bb13:        // pred: ^bb11
  cf.br ^bb14
^bb14:        // 2 preds: ^bb9, ^bb13
  %16 = arith.addi %9, %c1_4 : index
  cf.br ^bb8(%16 : index)
^bb15:        // pred: ^bb8
  return
  }
