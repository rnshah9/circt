; Check main circuit + subcircuit mappings flow

; Execute flow both normally and with altering hierarchy (via inline)

; Create some directories for output, cleanup if present
; RUN: rm -rf %t && mkdir -p %t/default %t/inline

; 1) Run on main circuit, with signal mapping annotations
; RUN: firtool %S/main.fir --annotation-file %S/subCircuit.json --firrtl-grand-central --split-verilog -o %t/default
; RUN: firtool %S/main.fir --annotation-file %S/subCircuit.json --firrtl-grand-central --split-verilog -o %t/inline  --annotation-file %S/inline.json

; Check the generated file
; RUN: FileCheck %s --input-file=%t/default/sigdrive.json --check-prefix=JSONDEFAULT
; RUN: FileCheck %s --input-file=%t/inline/sigdrive.json  --check-prefix=JSONINLINE

; JSONDEFAULT:        SignalDriverAnnotation
; JSONDEFAULT-LABEL:    "sinkTargets"
; JSONDEFAULT{LITERAL}:   "_1": "~Top|Foo>clock",
; JSONDEFAULT{LITERAL}:   "_1": "~Top|Foo>dataIn_a_b_c",
; JSONDEFAULT{LITERAL}:   "_1": "~Top|Foo>dataIn_d",
; JSONDEFAULT{LITERAL}:   "_1": "~Top|Bar>b",
; JSONDEFAULT-LABEL:    "sourceTargets"
; JSONDEFAULT{LITERAL}:   "_1": "~Top|Top>clock",
; JSONDEFAULT{LITERAL}:   "_1": "~Top|Foo>dataOut_x_y_z",
; JSONDEFAULT{LITERAL}:   "_1": "~Top|Foo>dataOut_w",
; JSONDEFAULT:          "circuit"
; JSONDEFAULT:          "annotations": []
; JSONDEFAULT:          "circuitPackage": "flowtest"

; JSONINLINE:         SignalDriverAnnotation
; JSONINLINE-LABEL:     "sinkTargets"
; JSONINLINE{LITERAL}:    "_1": "~Top|Top>foo_clock",
; JSONINLINE{LITERAL}:    "_1": "~Top|Top>foo_dataIn_a_b_c",
; JSONINLINE{LITERAL}:    "_1": "~Top|Top>foo_dataIn_d",
; JSONINLINE{LITERAL}:    "_1": "~Top|Bar>b",
; JSONINLINE-LABEL:     "sourceTargets"
; JSONINLINE{LITERAL}:    "_1": "~Top|Top>clock",
; JSONINLINE{LITERAL}:    "_1": "~Top|Top>foo_dataOut_x_y_z",
; JSONINLINE{LITERAL}:    "_1": "~Top|Top>foo_dataOut_w",
; JSONINLINE:           "circuit"
; JSONINLINE:           "annotations": []
; JSONINLINE:           "circuitPackage": "flowtest"


; 2) Run on sub circuit, with updated annotation file (sigdrive.json) from (1):
; RUN: firtool %S/subcircuit.fir --annotation-file %t/default/sigdrive.json --firrtl-grand-central | FileCheck %s --check-prefix=MAPPINGDEFAULT
; RUN: firtool %S/subcircuit.fir --annotation-file %t/inline/sigdrive.json  --firrtl-grand-central | FileCheck %s --check-prefix=MAPPINGINLINE

; MAPPINGDEFAULT-LABEL: module Sub_signal_mappings(
; MAPPINGDEFAULT-NEXT:   input           clock_sink,
; MAPPINGDEFAULT-NEXT:   input  [41:0]   data_sink_u,
; MAPPINGDEFAULT-NEXT:   input  [9000:0] data_sink_v,
; MAPPINGDEFAULT-NEXT:   input           data_sink_w_0,
; MAPPINGDEFAULT-NEXT:                   data_sink_w_1,
; MAPPINGDEFAULT-NEXT:   output          clock_source,
; MAPPINGDEFAULT-NEXT:   output [41:0]   data_source_u,
; MAPPINGDEFAULT-NEXT:   output [9000:0] data_source_v);
; (Don't preserve mappings to values that don't exist)
; MAPPINGDEFAULT:       `ifndef VERILATOR
; MAPPINGDEFAULT-NEXT:   initial begin
; MAPPINGDEFAULT-NEXT:     force Foo.clock = clock_sink;
; MAPPINGDEFAULT-NEXT:     force Foo.dataIn_a_b_c = data_sink_u;
; MAPPINGDEFAULT-NEXT:     force Foo.dataIn_d = data_sink_v;
; TODO: This is wrong but expected for now
; MAPPINGDEFAULT-NEXT:     force Bar.b = data_sink_w_0;
; MAPPINGDEFAULT-NEXT:     force Bar.b = data_sink_w_1;
; (cont)
; MAPPINGDEFAULT-NEXT:   end
; MAPPINGDEFAULT-NEXT:   `endif
; MAPPINGDEFAULT-NEXT:   assign clock_source = Top.clock;
; MAPPINGDEFAULT-NEXT:   assign data_source_u = Foo.dataOut_x_y_z;
; MAPPINGDEFAULT-NEXT:   assign data_source_v = Foo.dataOut_w;
; MAPPINGDEFAULT-NEXT: endmodule

; MAPPINGINLINE-LABEL: module Sub_signal_mappings(
; MAPPINGINLINE-NEXT:   input           clock_sink,
; MAPPINGINLINE-NEXT:   input  [41:0]   data_sink_u,
; MAPPINGINLINE-NEXT:   input  [9000:0] data_sink_v,
; MAPPINGINLINE-NEXT:   input           data_sink_w_0,
; MAPPINGINLINE-NEXT:                   data_sink_w_1,
; MAPPINGINLINE-NEXT:   output          clock_source,
; MAPPINGINLINE-NEXT:   output [41:0]   data_source_u,
; MAPPINGINLINE-NEXT:   output [9000:0] data_source_v);
; MAPPINGINLINE:       `ifndef VERILATOR
; MAPPINGINLINE-NEXT:   initial begin
; MAPPINGINLINE-NEXT:     force Top.foo_clock = clock_sink;
; MAPPINGINLINE-NEXT:     force Top.foo_dataIn_a_b_c = data_sink_u;
; MAPPINGINLINE-NEXT:     force Top.foo_dataIn_d = data_sink_v;
; TODO: This is wrong but expected for now
; MAPPINGINLINE-NEXT:     force Bar.b = data_sink_w_0;
; MAPPINGINLINE-NEXT:     force Bar.b = data_sink_w_1;
; (cont)
; MAPPINGINLINE-NEXT:   end
; MAPPINGINLINE-NEXT:   `endif
; MAPPINGINLINE-NEXT:   assign clock_source = Top.clock;
; MAPPINGINLINE-NEXT:   assign data_source_u = Top.foo_dataOut_x_y_z;
; MAPPINGINLINE-NEXT:   assign data_source_v = Top.foo_dataOut_w;
; MAPPINGINLINE-NEXT: endmodule
